<plexus>
	<components>
		<component>
			<role>com.ctrip.hermes.metaservice.service.MetaService</role>
			<implementation>com.ctrip.hermes.metaservice.service.DefaultMetaService</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.metaservice.model.MetaDao</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.service.ZookeeperService</role>
			<implementation>com.ctrip.hermes.metaservice.service.DefaultZookeeperService</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.metaservice.zk.ZKClient</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.service.ZookeeperEnsembleService</role>
			<implementation>com.ctrip.hermes.metaservice.service.DefaultZookeeperEnsembleService</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.metaservice.model.ZookeeperEnsembleDao</role>
				</requirement>
				<requirement>
					<role>org.unidal.dal.jdbc.transaction.TransactionManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.zk.ZKConfig</role>
			<implementation>com.ctrip.hermes.metaservice.zk.ZKConfig</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.env.ClientEnvironment</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.zk.ZKClient</role>
			<implementation>com.ctrip.hermes.metaservice.zk.ZKClient</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.metaservice.zk.ZKConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.metaservice.service.ZookeeperEnsembleService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>broker-lease</role-hint>
			<implementation>org.unidal.dal.jdbc.mapping.SimpleTableProvider</implementation>
			<configuration>
				<physical-table-name>broker_lease</physical-table-name>
				<data-source-name>fxhermesmetadb</data-source-name>
			</configuration>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>consumer-lease</role-hint>
			<implementation>org.unidal.dal.jdbc.mapping.SimpleTableProvider</implementation>
			<configuration>
				<physical-table-name>consumer_lease</physical-table-name>
				<data-source-name>fxhermesmetadb</data-source-name>
			</configuration>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>meta</role-hint>
			<implementation>org.unidal.dal.jdbc.mapping.SimpleTableProvider</implementation>
			<configuration>
				<physical-table-name>meta</physical-table-name>
				<data-source-name>fxhermesmetadb</data-source-name>
			</configuration>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>zookeeper-ensemble</role-hint>
			<implementation>org.unidal.dal.jdbc.mapping.SimpleTableProvider</implementation>
			<configuration>
				<physical-table-name>zookeeper_ensemble</physical-table-name>
				<data-source-name>fxhermesmetadb</data-source-name>
			</configuration>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.model.BrokerLeaseDao</role>
			<implementation>com.ctrip.hermes.metaservice.model.BrokerLeaseDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.model.ConsumerLeaseDao</role>
			<implementation>com.ctrip.hermes.metaservice.model.ConsumerLeaseDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.model.MetaDao</role>
			<implementation>com.ctrip.hermes.metaservice.model.MetaDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.model.ZookeeperEnsembleDao</role>
			<implementation>com.ctrip.hermes.metaservice.model.ZookeeperEnsembleDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.metaservice.service.ZookeeperService</role>
			<implementation>com.ctrip.hermes.metaservice.service.DefaultZookeeperService</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.metaservice.zk.ZKClient</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.datasource.DataSourceProvider</role>
			<implementation>org.unidal.dal.jdbc.datasource.DefaultDataSourceProvider</implementation>
			<configuration>
				<datasourceFile>/opt/data/hermes/datasources.xml</datasourceFile>
			</configuration>
		</component>
	</components>
</plexus>
