<plexus>
	<components>
		<component>
			<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
			<implementation>com.ctrip.hermes.broker.config.BrokerConfig</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.env.ClientEnvironment</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.bootstrap.BrokerBootstrap</role>
			<implementation>com.ctrip.hermes.broker.bootstrap.DefaultBrokerBootstrap</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.transport.NettyServer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.registry.BrokerRegistry</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.shutdown.ShutdownRequestMonitor</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.transport.NettyServer</role>
			<implementation>com.ctrip.hermes.broker.transport.NettyServer</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.transport.NettyServerConfig</role>
			<implementation>com.ctrip.hermes.broker.transport.NettyServerConfig</implementation>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.shutdown.ShutdownRequestMonitor</role>
			<implementation>com.ctrip.hermes.broker.shutdown.ShutdownRequestMonitor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessorManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.longpolling.LongPollingService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.transport.NettyServer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.transport.endpoint.EndpointClient</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_SEND</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.SendMessageCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.log.FileBizLogger</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_SEND_V3</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.SendMessageCommandProcessorV3</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.log.FileBizLogger</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_PULL</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.PullMessageCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.longpolling.LongPollingService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_PULL_V3</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.PullMessageCommandProcessorV3</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.longpolling.LongPollingService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_PULL_V4</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.PullMessageCommandProcessorV4</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.longpolling.LongPollingService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_PULL_SPECIFIC</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.PullSpecificMessageCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_ACK</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.AckMessageCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.log.FileBizLogger</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>MESSAGE_ACK_V3</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.AckMessageCommandProcessorV3</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.log.FileBizLogger</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>QUERY_LATEST_CONSUMER_OFFSET</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.QueryLatestConsumerOffsetCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>QUERY_LATEST_CONSUMER_OFFSET_V3</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.QueryLatestConsumerOffsetCommandProcessorV3</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>QUERY_MESSAGE_OFFSET_BY_TIME</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.QueryMessageOffsetByTimeCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.transport.command.processor.CommandProcessor</role>
			<role-hint>QUERY_MESSAGE_OFFSET_BY_TIME</role-hint>
			<implementation>com.ctrip.hermes.broker.transport.command.processor.QueryMessageOffsetByTimeCommandProcessor</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.longpolling.LongPollingService</role>
			<implementation>com.ctrip.hermes.broker.longpolling.DefaultLongPollingService</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.log.FileBizLogger</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.core.lease.LeaseManager</role>
			<role-hint>broker</role-hint>
			<implementation>com.ctrip.hermes.broker.lease.BrokerLeaseManager</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</role>
			<implementation>com.ctrip.hermes.broker.lease.BrokerLeaseContainer</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.lease.LeaseManager</role>
					<role-hint>broker</role-hint>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.queue.storage.filter.Filter</role>
			<implementation>com.ctrip.hermes.broker.queue.storage.filter.DefaultFilter</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.queue.MessageQueuePartitionFactory</role>
			<implementation>com.ctrip.hermes.broker.queue.MessageQueuePartitionFactory</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.queue.MessageQueueManager</role>
			<implementation>com.ctrip.hermes.broker.queue.DefaultMessageQueueManager</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.MessageQueuePartitionFactory</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.queue.storage.MessageQueueStorage</role>
			<role-hint>mysql</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.MySQLMessageQueueStorage</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.log.FileBizLogger</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.message.codec.MessageCodec</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.dal.hermes.MessagePriorityDao</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.dal.hermes.ResendGroupIdDao</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.dal.hermes.OffsetResendDao</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.dal.hermes.OffsetMessageDao</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.dal.hermes.DeadLetterDao</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.service.SystemClockService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.queue.storage.filter.Filter</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.queue.storage.MessageQueueStorage</role>
			<role-hint>kafka</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.kafka.KafkaMessageQueueStorage</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.core.message.codec.MessageCodec</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>message-priority</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.dal.HermesTableProvider</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>resend-group-id</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.dal.HermesTableProvider</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>offset-message</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.dal.HermesTableProvider</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>offset-resend</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.dal.HermesTableProvider</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.mapping.TableProvider</role>
			<role-hint>dead-letter</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.dal.HermesTableProvider</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.dal.jdbc.datasource.DataSourceProvider</role>
			<role-hint>message</role-hint>
			<implementation>com.ctrip.hermes.broker.queue.storage.mysql.dal.MessageDataSourceProvider</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.meta.MetaService</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.registry.BrokerRegistry</role>
			<implementation>com.ctrip.hermes.broker.registry.DefaultBrokerRegistry</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.config.BrokerConfig</role>
				</requirement>
				<requirement>
					<role>com.ctrip.hermes.broker.zk.ZKClient</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.zk.ZKClient</role>
			<implementation>com.ctrip.hermes.broker.zk.ZKClient</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.broker.zk.ZKConfig</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.zk.ZKConfig</role>
			<implementation>com.ctrip.hermes.broker.zk.ZKConfig</implementation>
			<requirements>
				<requirement>
					<role>com.ctrip.hermes.core.env.ClientEnvironment</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.dal.hermes.DeadLetterDao</role>
			<implementation>com.ctrip.hermes.broker.dal.hermes.DeadLetterDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.dal.hermes.MessagePriorityDao</role>
			<implementation>com.ctrip.hermes.broker.dal.hermes.MessagePriorityDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.dal.hermes.OffsetMessageDao</role>
			<implementation>com.ctrip.hermes.broker.dal.hermes.OffsetMessageDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.dal.hermes.OffsetResendDao</role>
			<implementation>com.ctrip.hermes.broker.dal.hermes.OffsetResendDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>com.ctrip.hermes.broker.dal.hermes.ResendGroupIdDao</role>
			<implementation>com.ctrip.hermes.broker.dal.hermes.ResendGroupIdDao</implementation>
			<requirements>
				<requirement>
					<role>org.unidal.dal.jdbc.QueryEngine</role>
				</requirement>
			</requirements>
		</component>
		<component>
			<role>org.unidal.initialization.ModuleManager</role>
			<implementation>org.unidal.initialization.DefaultModuleManager</implementation>
			<configuration>
				<topLevelModules>hermes-broker</topLevelModules>
			</configuration>
		</component>
	</components>
</plexus>
